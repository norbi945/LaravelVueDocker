version: "3.4"
services:
  webserver:
    image:  library/nginx:1.23.1-alpine
    container_name: "${SERVER_NAME}-webserver"
    volumes:
      - "./docker/config/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./src:/var/www/html"
    ports:
      - "80:80"
    environment:
      - NGINX_HOST=${NGINX_HOST}
    restart: unless-stopped
    networks:
      - server
    depends_on:
      - php
      - database
      - node
    links:
     - node
  php:
    build:
      context: "./docker/bin/php"
    container_name: "${SERVER_NAME}-php"
    restart: always
    volumes:
      - "./docker/config/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
      - "./src:/var/www/html/"
    working_dir: /api/
    networks:
      - server
      - database
  myadmin:
    image: phpmyadmin/phpmyadmin
    container_name: "${SERVER_NAME}-myadmin"
    ports:
        - "8080:80"
    environment:
        - PMA_ARBITRARY=1
        - PMA_HOST=${MYSQL_HOST}
    restart: unless-stopped
    networks:
      - database
    depends_on:
        - database
  database:
    build:
      context: "./docker/bin/mysql"
    container_name: "${SERVER_NAME}-mysql"
    restart: unless-stopped
    networks:
      - database
    ports:
      - "${MYSQL_HOST}:${MYSQL_PORT}:3306"
    volumes:
      - "${MYSQL_INITDB_DIR}:/docker-entrypoint-initdb.d"
      - "${MYSQL_DATA_DIR}:/var/lib/mysql"
      - "${MYSQL_LOG_DIR}:/var/log/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  redis:
    container_name: "${SERVER_NAME}-redis"
    image: redis:latest
    ports:
      - "${REDIS_HOST}:${REDIS_PORT}:6379"
  node:
    image: node:18.9.0-bullseye
    container_name: "${SERVER_NAME}-node"
    restart: unless-stopped
    ports:
     - "3000:3000"
    networks:
      - server
    working_dir: /app/
    environment:
      WEBPACK_MAX_CONCURRENT_WORKER: "auto-auto"
      NODE_OPTIONS: "--openssl-legacy-provider"
    command: "bash -c \"while true; do /bin/sleep 1; done\""
    volumes:
      - "./src/client/itsy-bitsy/:/app"

volumes:
  mysql:

networks:
  database:
  server:
